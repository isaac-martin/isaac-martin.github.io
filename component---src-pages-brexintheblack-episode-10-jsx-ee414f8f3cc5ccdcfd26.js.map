{"version":3,"sources":["webpack:///./src/components/podcast/transcriptHero/elements.jsx","webpack:///./src/components/podcast/transcriptHero/index.jsx","webpack:///./src/components/podcast/transcript/elements.jsx","webpack:///./src/components/podcast/transcript/index.jsx","webpack:///./src/components/ContactForm/elements.jsx","webpack:///./src/components/ContactForm/index.jsx","webpack:///./src/components/brexInTheBlack/episodeTenTranscript.jsx","webpack:///./src/pages/brexintheblack/episode-10.jsx"],"names":["Container","padding","backgroundColor","colors","white","DateLocation","color","black","textTransform","fontSize","lineHeight","letterSpacing","marginBottom","Primary","primary","Title","fontWeight","TranscriptHero","title","date","location","personTitle","gutterWidth","column","span","spanMedium","paddingTop","display","alignItems","justifyContent","flexDirection","Body","margin","TranscriptText","Speaker","breakPoints","small","TranscriptSection","AudioContainer","width","medium","RowWrapper","Transcript","embedLink","transcript","wrappedSpacing","src","frameBorder","scrolling","map","transcriptSection","i","withTopMargin","key","spanSmall","speaker","text","ContactForm","body","buttonTitle","formUrl","inputName","textAlign","paddingBottom","maxWidth","InputField","Button","flexGrow","height","border","cursor","Form","textColor","onDarkBackground","action","target","placeholder","type","autoComplete","name","episodeTenTranscript","Fragment","Episode","whiteContentBackground","description"],"mappings":"sKAIaA,EAAY,YAAO,MAAP,sCACpBC,YAAQ,IAAK,EAAG,EAAG,GADC,CAEvBC,gBAAiBC,IAAOC,SAGbC,EAAe,YAAO,MAAP,qBAAc,CACxCC,MAAOH,IAAOI,MACdC,cAAe,YACfC,SAAU,GACVC,WAAY,IACZC,cAAe,KACfC,aAAc,KAGHC,EAAU,YAAO,OAAP,qBAAe,CACpCP,MAAOH,IAAOW,UAGHC,EAAQ,YAAO,KAAP,qBAAa,CAChCT,MAAOH,IAAOI,MACdE,SAAU,GACVC,WAAY,KACZM,WAAY,IACZJ,aAAc,K,YCFDK,IAnBQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,YAA1B,OACrB,YAACrB,EAAD,KACE,YAAC,IAAD,CAAKsB,YAAa,GAAIC,OAAQ,IAC5B,YAAC,IAAD,CAAQC,KAAM,EAAGC,WAAY,IAC7B,YAAC,IAAD,CAAQD,KAAM,EAAGC,WAAY,IAC3B,uBACE,YAACpB,EAAD,KAAkBc,EAAlB,MAA4BC,GAC5B,YAACL,EAAD,KACGG,EACA,KACD,YAACL,EAAD,KAAUQ,MAIhB,YAAC,IAAD,CAAQG,KAAM,EAAGC,WAAY,Q,sICbtBzB,EAAY,YAAO,UAAP,sBAAkB,CACzC0B,WAAY,GACZpB,MAAOH,IAAOI,MACdoB,QAAS,OACTC,WAAY,UACZC,eAAgB,YAChBC,cAAe,WAGJC,EAAO,YAAO,MAAP,uCACfC,YAAO,GAAI,EAAG,IAAK,KAGXC,EAAiB,YAAO,MAAP,qHAOjBC,EAAU,YAAO,MAAP,2BACrBlB,WAAY,IACZP,SAAU,GACVC,WAAY,OACXyB,IAAYC,OAAQ,CACnBxB,cAAe,IALI,IASVyB,EAAoB,YAAO,MAAP,oFAKpBC,EAAiB,YAAO,SAAP,2BAC5BC,MAAO,MACPP,OAAQ,SACRL,QAAS,QACTf,aAAc,KAEbuB,IAAYK,QAAS,CACpBD,MAAO,OAPmB,EAS3BJ,IAAYC,OAAQ,CACnBG,MAAO,OAVmB,IAcjBE,EAAa,YAAO,MAAP,mE,YCcXC,IAjDI,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,WAArB,OACjB,YAAC5C,EAAD,KACE,YAAC,IAAD,CAAKsB,YAAa,GAAIC,OAAQ,IAC5B,YAAC,IAAD,CAAQC,KAAM,GAAIqB,eAAgB,GAChC,YAACP,EAAD,CACEQ,IAAKH,EACLI,YAAY,IACZC,UAAU,KACV9B,MAAOA,MAIb,YAACa,EAAD,KACGa,EAAWK,KAAI,SAACC,EAAmBC,GAApB,OACd,YAAC,IAAD,CAAK7B,YAAa,GAAIC,OAAQ,GAAI6B,eAAa,EAACC,IAAG,cAAgBF,GACjE,YAAC,IAAD,CAAQ3B,KAAM,EAAGC,WAAY,IAC7B,YAAC,IAAD,CAAQD,KAAM,EAAGC,WAAY,EAAG6B,UAAW,IACzC,YAACpB,EAAD,KACGgB,EAAkBK,QAClB,MAGL,YAAC,IAAD,CAAQ/B,KAAM,EAAGC,WAAY,GAAI6B,UAAW,IAC1C,YAACjB,EAAD,KACE,YAACJ,EAAD,KAAiBiB,EAAkBM,QAGvC,YAAC,IAAD,CAAQhC,KAAM,EAAGC,WAAY,QAGjC,YAACgB,EAAD,KACE,YAAC,IAAD,CAAKxC,QAAS,GAAIqB,YAAa,IAC7B,YAAC,IAAD,CAAQE,KAAM,IACd,YAAC,IAAD,CAAQA,KAAM,IACZ,YAACiC,EAAA,EAAD,CACEvC,MAAO,KACPwC,KAAK,0DACLC,YAAY,SACZC,QAxCZ,0GAyCYC,UAAU,qBAGd,YAAC,IAAD,CAAQrC,KAAM,U,8FC1DXxB,EAAY,YAAO,MAAP,4HAOZe,EAAQ,YAAO,KAAP,sBAAa,4BAChCN,SAAU,GACVC,WAAY,OACZJ,MAHgC,EAAGA,MAInCwD,UAAW,SACX9B,OAAQ,OACRhB,WAAY,IACZ+C,cAAe,KAEd5B,IAAYC,OAAQ,CACnB3B,SAAU,IAVoB,KAcrBsB,EAAO,YAAO,MAAP,sBAAc,kBAAgB,CAChDtB,SAAU,GACVC,WAAY,OACZJ,MAHgC,EAAGA,MAInC0B,OAAQ,OACR8B,UAAW,SACXC,cAAe,GACfC,SAAU,QAGCC,EAAa,YAAO,QAAP,0FAMbC,EAAS,YAAO,SAAP,qBAAiB,CACrCC,SAAU,EACVjE,gBAAiBC,IAAOW,QACxBa,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZnB,SAAU,GACV2D,OAAQ,GACR7B,MAAO,IACPjC,MAAO,OACP+D,OAAQ,OACR7D,cAAe,YACf,UAAW,CACT8D,OAAQ,aAICC,EAAO,YAAO,OAAP,wF,YC1BLd,IA1BK,SAAC,GAOd,IANLvC,EAMI,EANJA,MACAwC,EAKI,EALJA,KACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,UAGMW,EADF,EADJC,iBAEqC,OAAS,OAC9C,OACE,YAACzE,EAAD,KACGkB,GAAS,YAACH,EAAD,CAAOT,MAAOkE,GAAYtD,GACpC,YAACa,EAAD,CAAMzB,MAAOkE,GAAYd,GACzB,YAACa,EAAD,CAAMG,OAAQd,EAASe,OAAO,UAC5B,YAACV,EAAD,CACEW,YAAY,QACZC,KAAK,QACLC,aAAa,MACbC,KAAMlB,IAER,YAACK,EAAD,CAAQW,KAAK,UAAUlB,O,kHCxBlBqB,EAAuB,CAClCrC,UAAW,kEACXxB,KAAM,aACNC,SAAU,oBACVF,MAAO,WACPG,YAAa,qBACbuB,WAAY,CACV,CACEW,QAAS,aACTC,KACE,YAAC,IAAMyB,SAAP,qMAOJ,CACE1B,QAAS,qBACTC,KACE,YAAC,IAAMyB,SAAP,6CAGJ,CACE1B,QAAS,aACTC,KACE,YAAC,IAAMyB,SAAP,2FAMJ,CACE1B,QAAS,qBACTC,KACE,YAAC,IAAMyB,SAAP,21BAiBJ,CACE1B,QAAS,aACTC,KACE,YAAC,IAAMyB,SAAP,wDAKJ,CACE1B,QAAS,qBACTC,KACE,YAAC,IAAMyB,SAAP,8vBAaE,uBACA,uBAdF,yyBA4BE,uBACA,uBA7BF,usBAyCE,uBACA,uBA1CF,4KA8CE,uBACA,uBA/CF,2sCAmEE,uBACA,uBApEF,gYA8EJ,CACE1B,QAAS,aACTC,KACE,YAAC,IAAMyB,SAAP,kFAMJ,CACE1B,QAAS,qBACTC,KAAM,YAAC,IAAMyB,SAAP,sBC7HGC,UArBC,SAAC,GAAD,IAAG9D,EAAH,EAAGA,SAAH,OACd,YAAC,IAAD,CACEA,SAAUA,EACV+D,wBAAsB,EACtBjE,MAAM,+BACNkE,YAAY,2JAEZ,YAAC,IAAD,CACEjE,KAAMyB,EAAWzB,KACjBC,SAAUwB,EAAWxB,SACrBC,YAAauB,EAAWvB,YACxBH,MAAO0B,EAAW1B,QAEpB,YAAC,IAAD,CACEyB,UAAWC,EAAWD,UACtBzB,MAAO0B,EAAW1B,MAClB0B,WAAYA,EAAWA","file":"component---src-pages-brexintheblack-episode-10-jsx-ee414f8f3cc5ccdcfd26.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { padding } from \"polished\";\n\nexport const Container = styled(\"div\")({\n  ...padding(100, 0, 0, 0),\n  backgroundColor: colors.white,\n});\n\nexport const DateLocation = styled(\"div\")({\n  color: colors.black,\n  textTransform: \"uppercase\",\n  fontSize: 12,\n  lineHeight: 1.4,\n  letterSpacing: 1.05,\n  marginBottom: 30,\n});\n\nexport const Primary = styled(\"span\")({\n  color: colors.primary,\n});\n\nexport const Title = styled(\"h1\")({\n  color: colors.black,\n  fontSize: 32,\n  lineHeight: 1.31,\n  fontWeight: 600,\n  marginBottom: 24,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport { Container, DateLocation, Primary, Title } from \"./elements\";\n\nconst TranscriptHero = ({ title, date, location, personTitle }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={2} spanMedium={0} />\n      <Column span={8} spanMedium={12}>\n        <div>\n          <DateLocation>{`${date} - ${location}`}</DateLocation>\n          <Title>\n            {title}\n            {\": \"}\n            <Primary>{personTitle}</Primary>\n          </Title>\n        </div>\n      </Column>\n      <Column span={2} spanMedium={0} />\n    </Row>\n  </Container>\n);\n\nexport default TranscriptHero;\n","import styled from \"@emotion/styled\";\nimport { margin } from \"polished\";\n\nimport { breakPoints } from \"components/Grid.tsx\";\n\nimport colors from \"styles/colors\";\n\nexport const Container = styled(\"section\")({\n  paddingTop: 70,\n  color: colors.black,\n  display: \"flex\",\n  alignItems: \"stretch\",\n  justifyContent: \"flexStart\",\n  flexDirection: \"column\",\n});\n\nexport const Body = styled(\"div\")({\n  ...margin(40, 0, 120, 0),\n});\n\nexport const TranscriptText = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"column nowrap\",\n  fontSize: 16,\n  lineHeight: 1.7,\n});\n\nexport const Speaker = styled(\"div\")({\n  fontWeight: 600,\n  fontSize: 16,\n  lineHeight: 1.61,\n  [breakPoints.small]: {\n    marginBottom: -60,\n  },\n});\n\nexport const TranscriptSection = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"row nowrap\",\n});\n\nexport const AudioContainer = styled(\"iframe\")({\n  width: \"50%\",\n  margin: \"0 auto\",\n  display: \"block\",\n  marginBottom: 48,\n\n  [breakPoints.medium]: {\n    width: \"70%\",\n  },\n  [breakPoints.small]: {\n    width: \"90%\",\n  },\n});\n\nexport const RowWrapper = styled(\"div\")({\n  paddingTop: 80,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport ContactForm from \"components/ContactForm\";\nimport {\n  Container,\n  AudioContainer,\n  Body,\n  TranscriptText,\n  Speaker,\n  TranscriptSection,\n  RowWrapper,\n} from \"./elements\";\n\n// To DO (Mikalai 2019-09-04): If such constants will be grown will need to move them to one file\n\nconst contactFormUrl =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSdsHxkHI16joNQZ3nUkIBKDdyE2hK57HA4OYJOiIOl27etKWA/formResponse\";\n\nconst Transcript = ({ title, embedLink, transcript }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={12} wrappedSpacing={0}>\n        <AudioContainer\n          src={embedLink}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          title={title}\n        />\n      </Column>\n    </Row>\n    <Body>\n      {transcript.map((transcriptSection, i) => (\n        <Row gutterWidth={26} column={30} withTopMargin key={`transcript-${i}`}>\n          <Column span={2} spanMedium={0} />\n          <Column span={2} spanMedium={2} spanSmall={12}>\n            <Speaker>\n              {transcriptSection.speaker}\n              {\":\"}\n            </Speaker>\n          </Column>\n          <Column span={6} spanMedium={10} spanSmall={12}>\n            <TranscriptSection>\n              <TranscriptText>{transcriptSection.text}</TranscriptText>\n            </TranscriptSection>\n          </Column>\n          <Column span={2} spanMedium={0} />\n        </Row>\n      ))}\n      <RowWrapper>\n        <Row padding={30} gutterWidth={26}>\n          <Column span={1} />\n          <Column span={10}>\n            <ContactForm\n              title={null}\n              body=\"Get notified about future episodes of Brex in the Black\"\n              buttonTitle=\"submit\"\n              formUrl={contactFormUrl}\n              inputName=\"entry.182032046\"\n            />\n          </Column>\n          <Column span={1} />\n        </Row>\n      </RowWrapper>\n    </Body>\n  </Container>\n);\n\nexport default Transcript;\n","import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { breakPoints } from \"components/Grid.tsx\";\n\nexport const Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  paddingBottom: 165,\n  alignItems: \"center\",\n});\n\nexport const Title = styled(\"h2\")(({ color }) => ({\n  fontSize: 48,\n  lineHeight: \"52px\",\n  color,\n  textAlign: \"center\",\n  margin: \"auto\",\n  fontWeight: 600,\n  paddingBottom: 24,\n\n  [breakPoints.small]: {\n    fontSize: 36,\n  },\n}));\n\nexport const Body = styled(\"div\")(({ color }) => ({\n  fontSize: 16,\n  lineHeight: \"27px\",\n  color,\n  margin: \"auto\",\n  textAlign: \"center\",\n  paddingBottom: 40,\n  maxWidth: 500,\n}));\n\nexport const InputField = styled(\"input\")({\n  width: \"100%\",\n  height: 60,\n  paddingLeft: 20,\n});\n\nexport const Button = styled(\"button\")({\n  flexGrow: 0,\n  backgroundColor: colors.primary,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  fontSize: 12,\n  height: 60,\n  width: 200,\n  color: \"#FFF\",\n  border: \"none\",\n  textTransform: \"uppercase\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n});\n\nexport const Form = styled(\"form\")({\n  display: \"flex\",\n  width: \"100%\",\n  maxWidth: 600,\n});\n","import React from \"react\";\n\nimport { Container, Title, Body, InputField, Button, Form } from \"./elements\";\n\n// To DO (Abiel 2019-02-23): Remove redirection to Google's \"thank you for submitting\"\n\nconst ContactForm = ({\n  title,\n  body,\n  buttonTitle,\n  formUrl,\n  inputName,\n  onDarkBackground,\n}) => {\n  const textColor = onDarkBackground ? \"#FFF\" : \"#000\";\n  return (\n    <Container>\n      {title && <Title color={textColor}>{title}</Title>}\n      <Body color={textColor}>{body}</Body>\n      <Form action={formUrl} target=\"_blank\">\n        <InputField\n          placeholder=\"Email\"\n          type=\"email\"\n          autoComplete=\"off\"\n          name={inputName}\n        />\n        <Button type=\"submit\">{buttonTitle}</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\n\nexport const episodeTenTranscript = {\n  embedLink: \"https://anchor.fm/brexintheblack/embed/episodes/Accruals-e513go\",\n  date: \"May 2 2019\",\n  location: \"San Francisco, CA\",\n  title: \"Accruals\",\n  personTitle: \"Michael Tannenbaum\",\n  transcript: [\n    {\n      speaker: \"Chris Read\",\n      text: (\n        <React.Fragment>\n          Welcome to another episode of Brex in the Black - where we discuss\n          financial operations. We&#39;ve got our CFO here, Michael Tannenbaum,\n          to talk about accruals today. Michael, thanks so much.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael Tannenbaum\",\n      text: (\n        <React.Fragment>Thank you. Accruals - a tricky one.</React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris Read\",\n      text: (\n        <React.Fragment>\n          Yes, a tricky one. So what are accruals? And why are they important\n          for startups?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael Tannenbaum\",\n      text: (\n        <React.Fragment>\n          So accruals for anyone who&#39;s taken an accounting class, they\n          usually start with cash accounting versus accrual accounting, right?\n          This concept of accrual accounting is the idea that your books and\n          records are supposed to represent activity that has been incurred, not\n          necessarily cash that has gone out the door. So a really clear example\n          of this would be if you pay - if you have employees who have worked up\n          through Friday of the week, but the payday is the following Friday,\n          they&#39;ve already performed services, you owe them this money.\n          It&#39;s cash out the door in the future, but you haven&#39;t paid\n          them yet. So if the financial period that you&#39;re looking at is end\n          of this Friday, do you say, oh, we haven&#39;t paid these employees\n          yet, so we&#39;re not going to cost ourselves for that compensation?\n          Or do you say we have an accrual? Does that make sense?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris Read\",\n      text: (\n        <React.Fragment>\n          Yes. So what&#39;s tricky or important about this?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael Tannenbaum\",\n      text: (\n        <React.Fragment>\n          Well, what&#39;s tricky or important about this is that most early\n          stage companies are managing their accounting to cash. Right? Most\n          people, if you&#39;re just running a small company, you don&#39;t know\n          what you&#39;re doing - your two kids from Stanford, you don&#39;t\n          have a CFO, you don&#39;t know what you&#39;re doing. You&#39;re\n          usually managing to the bank account, you&#39;re saying, well, what do\n          we spend this month? What did we spend last month. But as your company\n          gets more sophisticated, you start to have accrual rules, both in\n          terms of revenue, and in terms of expenses. What needs to happen is at\n          least once a month, say any accounting period, you have to look and\n          say well, what are the income and accrued expenses as of this date\n          that aren&#39;t reflected in our cash position.\n          <br />\n          <br />\n          So for example, if you&#39;re a software business, you could have\n          signed - you could have people who have started using your product,\n          but they haven&#39;t been billed for their first month, but they owe\n          some portion of their bill for using your product for part of the\n          month - their statement hasn&#39;t come due yet, but you would\n          recognize a revenue accrual. So you can say, well, of our customers\n          that have started using product, they owe us this money. We\n          haven&#39;t built them for it yet. So we do not have the cash but this\n          is revenue we earned in this period, likely this month. And that&#39;s\n          relevant, because the whole thing with accounting is you&#39;re always\n          going to be looking at it for a certain period. The standard period as\n          monthly. And so typically, each month you&#39;re doing these accrual\n          estimates of revenue.\n          <br />\n          <br />\n          And now I&#39;ll go through some costs. We already talked about\n          payroll, that&#39;s an obvious one. Often it&#39;s very infrequent\n          that the payday and the month end date align. And so you&#39;re almost\n          always going to have people who have worked and earned compensation\n          that has not been paid, that will be accrued, that&#39;s an accrued\n          expense. Another example of accrued expense would be legal services,\n          you could have had a law firm working for 30 hours helping you through\n          some regulatory issue, and those services have been performed. You owe\n          that money. It happened in this month, and just because the law firm\n          hasn&#39;t billed you doesn&#39;t mean you don&#39;t recognize the\n          expense in this month. That is the essence of accruals.\n          <br />\n          <br />\n          There&#39;s a little bit more detail to it in the sense of what is\n          actually happening for accounting with accruals? So for those of you\n          who are not interested, turn off now.\n          <br />\n          <br />\n          But I will talk a little bit about what the accounting is. Right. And\n          so the point is, when you have accrual revenue - but let&#39;s talk\n          about it and expenses, it’s easier. And so this compensation, what\n          you&#39;re doing is you are creating both an expense and a liability\n          at the month end. So you&#39;re saying I have incurred this expense,\n          but I haven&#39;t paid the cash, so I owe this to employees. So it\n          creates a liability. So at the end of the month, on your balance sheet\n          you would have an accrued liability for the wages that you owe\n          employees that you haven&#39;t paid, and the offsetting entry would be\n          the expense that hits your income statement. When you go and actually\n          pay that bill - when you pay the employees - you then reverse the\n          liability, you decrease it and you decrease cash, but your income\n          statement is unaffected. You’ve already taking the expense. So the\n          point is you look at the income statement and those services were\n          performed in the last month - the fact that you pay the cash in the\n          next month is the cash point. So it&#39;s just a switch on the balance\n          sheet from liability to cash. It&#39;s a reduction in both liability\n          and cash. Versus previously it was a hit to the income statement and\n          an increase to liability.\n          <br />\n          <br />\n          So the point is that the income statement - you don&#39;t care when\n          the company paid. I mean you do for separate purposes. But for the\n          purposes of the health of the financial operations of that business,\n          you only want to focus on when was the service or the revenue\n          incurred? When was the expenses incurred? When was the revenue earned?\n          That is the basis of accrual based accounting.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris Read\",\n      text: (\n        <React.Fragment>\n          All right. Michael, thanks so much for coming on to talk about\n          accruals.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael Tannenbaum\",\n      text: <React.Fragment>Thank you.</React.Fragment>,\n    },\n  ],\n};\n","import React from \"react\";\n\nimport Layout from \"components/layout\";\n\nimport TranscriptHero from \"components/podcast/transcriptHero\";\nimport Transcript from \"components/podcast/transcript\";\nimport { episodeTenTranscript as transcript } from \"components/brexInTheBlack/episodeTenTranscript\";\n\nconst Episode = ({ location }) => (\n  <Layout\n    location={location}\n    whiteContentBackground\n    title=\"Brex in the Black | Accruals\"\n    description=\"We review the concept of accruals, the difference between accrual and cash accounting, and a few examples of the use of accrual accounting in business.\"\n  >\n    <TranscriptHero\n      date={transcript.date}\n      location={transcript.location}\n      personTitle={transcript.personTitle}\n      title={transcript.title}\n    />\n    <Transcript\n      embedLink={transcript.embedLink}\n      title={transcript.title}\n      transcript={transcript.transcript}\n    />\n  </Layout>\n);\n\nexport default Episode;\n"],"sourceRoot":""}