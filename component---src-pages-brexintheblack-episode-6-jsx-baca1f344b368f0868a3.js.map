{"version":3,"sources":["webpack:///./src/components/brexInTheBlack/episodeSixTranscript.jsx","webpack:///./src/pages/brexintheblack/episode-6.jsx","webpack:///./src/components/podcast/transcriptHero/elements.jsx","webpack:///./src/components/podcast/transcriptHero/index.jsx","webpack:///./src/components/podcast/transcript/elements.jsx","webpack:///./src/components/podcast/transcript/index.jsx","webpack:///./src/components/ContactForm/elements.jsx","webpack:///./src/components/ContactForm/index.jsx"],"names":["episodeSixTranscript","embedLink","date","location","title","personTitle","transcript","speaker","text","Fragment","Episode","whiteContentBackground","description","Container","padding","backgroundColor","colors","white","DateLocation","color","black","textTransform","fontSize","lineHeight","letterSpacing","marginBottom","Primary","primary","Title","fontWeight","TranscriptHero","gutterWidth","column","span","spanMedium","paddingTop","display","alignItems","justifyContent","flexDirection","Body","margin","TranscriptText","Speaker","breakPoints","small","TranscriptSection","AudioContainer","width","medium","RowWrapper","Transcript","wrappedSpacing","src","frameBorder","scrolling","map","transcriptSection","i","withTopMargin","key","spanSmall","ContactForm","body","buttonTitle","formUrl","inputName","textAlign","paddingBottom","maxWidth","InputField","Button","flexGrow","height","border","cursor","Form","textColor","onDarkBackground","action","target","placeholder","type","autoComplete","name"],"mappings":"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","file":"component---src-pages-brexintheblack-episode-6-jsx-baca1f344b368f0868a3.js","sourcesContent":["import React from \"react\";\n\nexport const episodeSixTranscript = {\n  embedLink:\n    \"https://anchor.fm/christopher-read/embed/episodes/Outsourcing-Accounting-e4ckrl/a-aharn1\",\n  date: \"Apr 30 2019\",\n  location: \"San Francisco, CA\",\n  title: \"Outsourcing Accounting\",\n  personTitle: \"Michael Tannenbaum\",\n  transcript: [\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          Welcome to Brex in the Black. We&#39;ve got our CFO, Michael here to\n          talk about whether or not to outsource accounting. Michael, thanks so\n          much for coming on.\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Michael T\",\n      text: <React.Fragment>Thank you for having me.</React.Fragment>,\n    },\n\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          So you’re a young startup, do you outsource accounting or not? And\n          what&#39;s the calculus of that decision?\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Sure, the answer is usually yes. I think if you don&#39;t have someone\n          who knows accounting or finance or what they&#39;re doing, you need to\n          outsource because your company is going to work or it&#39;s not going\n          to work. And you don&#39;t really need to be bothered [with\n          accounting] and it&#39;s not that expensive. So my initial bias is\n          typically yes. However, when I joined Brex, I was the first employee —\n          yes, there&#39;s other people here who say they were the first\n          employee. Whatever. Point was, I knew what I was doing so we\n          didn&#39;t outsource. But if that&#39;s not the case, I mean, I had\n          been a VP of finance before, right. But I think there&#39;s going to\n          be certain tasks like payroll, modeling, accounting, closing the\n          month, etc. It&#39;s just not worth learning all those things as\n          you&#39;re trying to build a business, unless you&#39;re kind of like\n          somebody looking for a job, and you don&#39;t really have one, but\n          you&#39;re hanging around the founders — sure, go learn that. But\n          otherwise, if you have things to do, I wouldn&#39;t focus on it.\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          So what&#39;s the best way to outsource accounting then?\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So there&#39;s a bunch of firms. Actually, Brex, we have an accounting\n          portal, where you can just look on our site and find an outsourced\n          accountant that is wanting to work with you. But there&#39;s a whole\n          sort of industry, if you will, of people that serve small companies\n          and help with their accounting, finance, bookkeeping services. And\n          there&#39;s even ones that specifically focus on startups.\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          And this is like boutique consultant kind of work?\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          There&#39;s sort of a range. There are sort of high touch boutique\n          consultants, if you will. There&#39;s also some firms that are trying\n          to use more technology as part of the process. And so there&#39;s\n          almost startups themselves serving startups. Startups serving startups\n          is a trend I hear these days.\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Chris R\",\n      text: <React.Fragment>Oh, do you?</React.Fragment>,\n    },\n\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Yes, I think Brex may have been a part of that trend. So there&#39;s\n          those people. So most of these outsource people will use either\n          QuickBooks or Xero, right? They won&#39;t have their own ERP, right,\n          they will just help you put your financials into one of the standard\n          ERPs. And I know we covered ERPs on a different podcast.\n          <br />\n          <br />\n          And then there are some startups that actually were like outsourced\n          CFO firms, outsourced accounting firms, bookkeepers, whatever you want\n          to call them, that actually have their own accounting software as\n          well. So somebody like Bench, or I believe there&#39;s another one\n          called inDinero. Both of them, they&#39;re not actually having you use\n          your own [ERP]. They&#39;re kind of using their own ERP as part of\n          their consultative services. So there, the decision would be, just\n          know that if you&#39;re going with that, you&#39;re kind of making a\n          decision to go, like really commit to that ecosystem.\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          Right. How do you determine whether a particular accounting consultant\n          is good, whether you should use that person?\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Yeah, so there&#39;s the Brex referral portal where you can sort of\n          see how many other Brex customers like you have used the product,\n          which is helpful. Referral and word of mouth is always a good — this\n          is kind of one of those things where asking a friend or other founder\n          is a good way to do that. If you don&#39;t know anyone, I think logos\n          on the site tend to be good proof points. And I also think that asking\n          your investors can be good, but in general, I think referral is\n          probably the way to go. Particularly because — so accounting falls in\n          the broad category of professional services. And with professional\n          services, you&#39;ve got the firm, and then you have the person\n          you&#39;re actually dealing with, right? And so that firm brand is\n          worth something, but a lot of time it’s going to be this specific\n          person that you&#39;re dealing with. And that&#39;s where the referral\n          is key. If you&#39;re using one of those more tech forward people,\n          then you&#39;re sort of relying on the tech. One interesting company\n          also in this space is a company called Botkeeper, which actually does\n          on the back end, they&#39;re automating software for the accountants,\n          but you may not necessarily be aware that they&#39;re using that.\n          That&#39;s just a fun fact that I learned recently.\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          All right, Michael, thanks so much for coming on and talking about\n          outsourcing.\n        </React.Fragment>\n      ),\n    },\n\n    {\n      speaker: \"Michael T\",\n      text: <React.Fragment>No problem.</React.Fragment>,\n    },\n  ],\n};\n","import React from \"react\";\n\nimport Layout from \"components/layout\";\n\nimport TranscriptHero from \"components/podcast/transcriptHero\";\nimport Transcript from \"components/podcast/transcript\";\nimport { episodeSixTranscript as transcript } from \"components/brexInTheBlack/episodeSixTranscript\";\n\nconst Episode = ({ location }) => (\n  <Layout\n    location={location}\n    whiteContentBackground\n    title=\"Brex In the Black | Outsourcing Accounting\"\n    description=\"Do you outsource accounting as a startup? Yes - here’s how.\"\n  >\n    <TranscriptHero\n      date={transcript.date}\n      location={transcript.location}\n      personTitle={transcript.personTitle}\n      title={transcript.title}\n    />\n    <Transcript\n      embedLink={transcript.embedLink}\n      title={transcript.title}\n      transcript={transcript.transcript}\n    />\n  </Layout>\n);\n\nexport default Episode;\n","import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { padding } from \"polished\";\n\nexport const Container = styled(\"div\")({\n  ...padding(100, 0, 0, 0),\n  backgroundColor: colors.white,\n});\n\nexport const DateLocation = styled(\"div\")({\n  color: colors.black,\n  textTransform: \"uppercase\",\n  fontSize: 12,\n  lineHeight: 1.4,\n  letterSpacing: 1.05,\n  marginBottom: 30,\n});\n\nexport const Primary = styled(\"span\")({\n  color: colors.primary,\n});\n\nexport const Title = styled(\"h1\")({\n  color: colors.black,\n  fontSize: 32,\n  lineHeight: 1.31,\n  fontWeight: 600,\n  marginBottom: 24,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport { Container, DateLocation, Primary, Title } from \"./elements\";\n\nconst TranscriptHero = ({ title, date, location, personTitle }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={2} spanMedium={0} />\n      <Column span={8} spanMedium={12}>\n        <div>\n          <DateLocation>{`${date} - ${location}`}</DateLocation>\n          <Title>\n            {title}\n            {\": \"}\n            <Primary>{personTitle}</Primary>\n          </Title>\n        </div>\n      </Column>\n      <Column span={2} spanMedium={0} />\n    </Row>\n  </Container>\n);\n\nexport default TranscriptHero;\n","import styled from \"@emotion/styled\";\nimport { margin } from \"polished\";\n\nimport { breakPoints } from \"components/Grid.tsx\";\n\nimport colors from \"styles/colors\";\n\nexport const Container = styled(\"section\")({\n  paddingTop: 70,\n  color: colors.black,\n  display: \"flex\",\n  alignItems: \"stretch\",\n  justifyContent: \"flexStart\",\n  flexDirection: \"column\",\n});\n\nexport const Body = styled(\"div\")({\n  ...margin(40, 0, 120, 0),\n});\n\nexport const TranscriptText = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"column nowrap\",\n  fontSize: 16,\n  lineHeight: 1.7,\n});\n\nexport const Speaker = styled(\"div\")({\n  fontWeight: 600,\n  fontSize: 16,\n  lineHeight: 1.61,\n  [breakPoints.small]: {\n    marginBottom: -60,\n  },\n});\n\nexport const TranscriptSection = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"row nowrap\",\n});\n\nexport const AudioContainer = styled(\"iframe\")({\n  width: \"50%\",\n  margin: \"0 auto\",\n  display: \"block\",\n  marginBottom: 48,\n\n  [breakPoints.medium]: {\n    width: \"70%\",\n  },\n  [breakPoints.small]: {\n    width: \"90%\",\n  },\n});\n\nexport const RowWrapper = styled(\"div\")({\n  paddingTop: 80,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport ContactForm from \"components/ContactForm\";\nimport {\n  Container,\n  AudioContainer,\n  Body,\n  TranscriptText,\n  Speaker,\n  TranscriptSection,\n  RowWrapper,\n} from \"./elements\";\n\n// To DO (Mikalai 2019-09-04): If such constants will be grown will need to move them to one file\n\nconst contactFormUrl =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSdsHxkHI16joNQZ3nUkIBKDdyE2hK57HA4OYJOiIOl27etKWA/formResponse\";\n\nconst Transcript = ({ title, embedLink, transcript }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={12} wrappedSpacing={0}>\n        <AudioContainer\n          src={embedLink}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          title={title}\n        />\n      </Column>\n    </Row>\n    <Body>\n      {transcript.map((transcriptSection, i) => (\n        <Row gutterWidth={26} column={30} withTopMargin key={`transcript-${i}`}>\n          <Column span={2} spanMedium={0} />\n          <Column span={2} spanMedium={2} spanSmall={12}>\n            <Speaker>\n              {transcriptSection.speaker}\n              {\":\"}\n            </Speaker>\n          </Column>\n          <Column span={6} spanMedium={10} spanSmall={12}>\n            <TranscriptSection>\n              <TranscriptText>{transcriptSection.text}</TranscriptText>\n            </TranscriptSection>\n          </Column>\n          <Column span={2} spanMedium={0} />\n        </Row>\n      ))}\n      <RowWrapper>\n        <Row padding={30} gutterWidth={26}>\n          <Column span={1} />\n          <Column span={10}>\n            <ContactForm\n              title={null}\n              body=\"Get notified about future episodes of Brex in the Black\"\n              buttonTitle=\"submit\"\n              formUrl={contactFormUrl}\n              inputName=\"entry.182032046\"\n            />\n          </Column>\n          <Column span={1} />\n        </Row>\n      </RowWrapper>\n    </Body>\n  </Container>\n);\n\nexport default Transcript;\n","import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { breakPoints } from \"components/Grid.tsx\";\n\nexport const Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  paddingBottom: 165,\n  alignItems: \"center\",\n});\n\nexport const Title = styled(\"h2\")(({ color }) => ({\n  fontSize: 48,\n  lineHeight: \"52px\",\n  color,\n  textAlign: \"center\",\n  margin: \"auto\",\n  fontWeight: 600,\n  paddingBottom: 24,\n\n  [breakPoints.small]: {\n    fontSize: 36,\n  },\n}));\n\nexport const Body = styled(\"div\")(({ color }) => ({\n  fontSize: 16,\n  lineHeight: \"27px\",\n  color,\n  margin: \"auto\",\n  textAlign: \"center\",\n  paddingBottom: 40,\n  maxWidth: 500,\n}));\n\nexport const InputField = styled(\"input\")({\n  width: \"100%\",\n  height: 60,\n  paddingLeft: 20,\n});\n\nexport const Button = styled(\"button\")({\n  flexGrow: 0,\n  backgroundColor: colors.primary,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  fontSize: 12,\n  height: 60,\n  width: 200,\n  color: \"#FFF\",\n  border: \"none\",\n  textTransform: \"uppercase\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n});\n\nexport const Form = styled(\"form\")({\n  display: \"flex\",\n  width: \"100%\",\n  maxWidth: 600,\n});\n","import React from \"react\";\n\nimport { Container, Title, Body, InputField, Button, Form } from \"./elements\";\n\n// To DO (Abiel 2019-02-23): Remove redirection to Google's \"thank you for submitting\"\n\nconst ContactForm = ({\n  title,\n  body,\n  buttonTitle,\n  formUrl,\n  inputName,\n  onDarkBackground,\n}) => {\n  const textColor = onDarkBackground ? \"#FFF\" : \"#000\";\n  return (\n    <Container>\n      {title && <Title color={textColor}>{title}</Title>}\n      <Body color={textColor}>{body}</Body>\n      <Form action={formUrl} target=\"_blank\">\n        <InputField\n          placeholder=\"Email\"\n          type=\"email\"\n          autoComplete=\"off\"\n          name={inputName}\n        />\n        <Button type=\"submit\">{buttonTitle}</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n"],"sourceRoot":""}