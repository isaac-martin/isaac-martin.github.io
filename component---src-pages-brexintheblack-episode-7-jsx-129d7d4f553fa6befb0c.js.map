{"version":3,"sources":["webpack:///./src/components/podcast/transcriptHero/elements.jsx","webpack:///./src/components/podcast/transcriptHero/index.jsx","webpack:///./src/components/podcast/transcript/elements.jsx","webpack:///./src/components/podcast/transcript/index.jsx","webpack:///./src/components/brexInTheBlack/episodeSevenTranscript.jsx","webpack:///./src/pages/brexintheblack/episode-7.jsx","webpack:///./src/components/ContactForm/elements.jsx","webpack:///./src/components/ContactForm/index.jsx"],"names":["Container","padding","backgroundColor","colors","white","DateLocation","color","black","textTransform","fontSize","lineHeight","letterSpacing","marginBottom","Primary","primary","Title","fontWeight","TranscriptHero","title","date","location","personTitle","gutterWidth","column","span","spanMedium","paddingTop","display","alignItems","justifyContent","flexDirection","Body","margin","TranscriptText","Speaker","breakPoints","small","TranscriptSection","AudioContainer","width","medium","RowWrapper","Transcript","embedLink","transcript","wrappedSpacing","src","frameBorder","scrolling","map","transcriptSection","i","withTopMargin","key","spanSmall","speaker","text","ContactForm","body","buttonTitle","formUrl","inputName","episodeSevenTranscript","Fragment","Episode","whiteContentBackground","description","textAlign","paddingBottom","maxWidth","InputField","Button","flexGrow","height","border","cursor","Form","textColor","onDarkBackground","action","target","placeholder","type","autoComplete","name"],"mappings":"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","file":"component---src-pages-brexintheblack-episode-7-jsx-129d7d4f553fa6befb0c.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { padding } from \"polished\";\n\nexport const Container = styled(\"div\")({\n  ...padding(100, 0, 0, 0),\n  backgroundColor: colors.white,\n});\n\nexport const DateLocation = styled(\"div\")({\n  color: colors.black,\n  textTransform: \"uppercase\",\n  fontSize: 12,\n  lineHeight: 1.4,\n  letterSpacing: 1.05,\n  marginBottom: 30,\n});\n\nexport const Primary = styled(\"span\")({\n  color: colors.primary,\n});\n\nexport const Title = styled(\"h1\")({\n  color: colors.black,\n  fontSize: 32,\n  lineHeight: 1.31,\n  fontWeight: 600,\n  marginBottom: 24,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport { Container, DateLocation, Primary, Title } from \"./elements\";\n\nconst TranscriptHero = ({ title, date, location, personTitle }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={2} spanMedium={0} />\n      <Column span={8} spanMedium={12}>\n        <div>\n          <DateLocation>{`${date} - ${location}`}</DateLocation>\n          <Title>\n            {title}\n            {\": \"}\n            <Primary>{personTitle}</Primary>\n          </Title>\n        </div>\n      </Column>\n      <Column span={2} spanMedium={0} />\n    </Row>\n  </Container>\n);\n\nexport default TranscriptHero;\n","import styled from \"@emotion/styled\";\nimport { margin } from \"polished\";\n\nimport { breakPoints } from \"components/Grid.tsx\";\n\nimport colors from \"styles/colors\";\n\nexport const Container = styled(\"section\")({\n  paddingTop: 70,\n  color: colors.black,\n  display: \"flex\",\n  alignItems: \"stretch\",\n  justifyContent: \"flexStart\",\n  flexDirection: \"column\",\n});\n\nexport const Body = styled(\"div\")({\n  ...margin(40, 0, 120, 0),\n});\n\nexport const TranscriptText = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"column nowrap\",\n  fontSize: 16,\n  lineHeight: 1.7,\n});\n\nexport const Speaker = styled(\"div\")({\n  fontWeight: 600,\n  fontSize: 16,\n  lineHeight: 1.61,\n  [breakPoints.small]: {\n    marginBottom: -60,\n  },\n});\n\nexport const TranscriptSection = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"row nowrap\",\n});\n\nexport const AudioContainer = styled(\"iframe\")({\n  width: \"50%\",\n  margin: \"0 auto\",\n  display: \"block\",\n  marginBottom: 48,\n\n  [breakPoints.medium]: {\n    width: \"70%\",\n  },\n  [breakPoints.small]: {\n    width: \"90%\",\n  },\n});\n\nexport const RowWrapper = styled(\"div\")({\n  paddingTop: 80,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport ContactForm from \"components/ContactForm\";\nimport {\n  Container,\n  AudioContainer,\n  Body,\n  TranscriptText,\n  Speaker,\n  TranscriptSection,\n  RowWrapper,\n} from \"./elements\";\n\n// To DO (Mikalai 2019-09-04): If such constants will be grown will need to move them to one file\n\nconst contactFormUrl =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSdsHxkHI16joNQZ3nUkIBKDdyE2hK57HA4OYJOiIOl27etKWA/formResponse\";\n\nconst Transcript = ({ title, embedLink, transcript }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={12} wrappedSpacing={0}>\n        <AudioContainer\n          src={embedLink}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          title={title}\n        />\n      </Column>\n    </Row>\n    <Body>\n      {transcript.map((transcriptSection, i) => (\n        <Row gutterWidth={26} column={30} withTopMargin key={`transcript-${i}`}>\n          <Column span={2} spanMedium={0} />\n          <Column span={2} spanMedium={2} spanSmall={12}>\n            <Speaker>\n              {transcriptSection.speaker}\n              {\":\"}\n            </Speaker>\n          </Column>\n          <Column span={6} spanMedium={10} spanSmall={12}>\n            <TranscriptSection>\n              <TranscriptText>{transcriptSection.text}</TranscriptText>\n            </TranscriptSection>\n          </Column>\n          <Column span={2} spanMedium={0} />\n        </Row>\n      ))}\n      <RowWrapper>\n        <Row padding={30} gutterWidth={26}>\n          <Column span={1} />\n          <Column span={10}>\n            <ContactForm\n              title={null}\n              body=\"Get notified about future episodes of Brex in the Black\"\n              buttonTitle=\"submit\"\n              formUrl={contactFormUrl}\n              inputName=\"entry.182032046\"\n            />\n          </Column>\n          <Column span={1} />\n        </Row>\n      </RowWrapper>\n    </Body>\n  </Container>\n);\n\nexport default Transcript;\n","import React from \"react\";\n\nexport const episodeSevenTranscript = {\n  embedLink:\n    \"https://anchor.fm/christopher-read/embed/episodes/Benefits-e4ckrs/a-aharnr\",\n  date: \"May 7 2019\",\n  location: \"San Francisco, CA\",\n  title: \"Benefits\",\n  personTitle: \"Michael Tannenbaum\",\n  transcript: [\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          Welcome to brex in the black. We&#39;ve got our CFO here, Michael to\n          talk about benefits. Michael, thanks so much for coming on.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: <React.Fragment>Thank you.</React.Fragment>,\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          So how should startups think about benefits generally? And then how\n          does the CFO get involved?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Sure. So I think, in the beginning of a startup, or in an early small\n          company, there&#39;s kind of one person who manages, typically,\n          benefits, HR operations, everything. I&#39;ll speak from that\n          authority, having done it a couple different times in my life. I think\n          that benefits, look, the reality of the health care system in the US\n          is that it is largely employer sponsored for people that are working,\n          so you have Medicare, etc., but a lot of people working people expect\n          to get health care from their employer. And now post ACA, the\n          Affordable Care Act, it&#39;s sort of required. So I think when\n          you&#39;re doing that function, whether it be finance, HR, operations,\n          you have a responsibility to figure out benefits. And specifically,\n          what I tend to focus on is just trying to make something that people\n          feel good about, and not having it be too complicated. But benefits is\n          not something you can just purchase — either it comes from a payroll\n          vendor, or from a broker. And so what a lot of people do is if\n          they&#39;re using something like a gusto, or a rippling, or a payroll\n          administrator online, those firms offer benefits as part of their\n          payroll package. The other option for a really small company is to\n          find a broker. And they will help you get the get the insurance. But\n          the point is, you can&#39;t just call up anthem, or United Health or\n          Kaiser Permanente, and just negotiate directly with them. It&#39;s\n          insurance. So it&#39;s all only offered via broker.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          So how do you think about all those options?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So what I&#39;d like to do is just look at the main decisions that\n          you&#39;re making: what percentage of the premiums is the employer\n          covering? What are the insurers that you&#39;re offering? What are the\n          plans? Meaning both the carrier so United Health versus anthem versus\n          Cigna? And then sort of within them? What plan are you offering -\n          usually platinum, gold, silver, so how rich are the benefits? How much\n          is out of pocket?\n          <br />\n          <br />\n          The way I think through that is, look, in the competitive environment\n          and war for talent that we&#39;re in today, there&#39;s sort of an\n          expectation, at least within tech, that 100% of premiums are covered -\n          that employees aren&#39;t paying anything out of cost. I think you\n          could probably get away with covering 80%. But it&#39;s definitely\n          something that people care about. A lot of people in the recruiting\n          process will ask about benefits. I don&#39;t know why people, I mean,\n          look, some people get sick. But a lot of times, the people end up\n          probably spending more time caring about it than they actually using\n          it.\n          <br />\n          <br />\n          I tend to be in favor of offering 100%, though I tend to be in favor\n          of not necessarily offering 100% for a dependent. Which means if\n          someone has a spouse, or a domestic partner, or a child, I don&#39;t\n          think it&#39;s necessarily market or required that you offer 100%\n          there. Keep in mind for people working at big non tech companies, like\n          I worked at JP Morgan out of college, those companies do not pay 100%\n          of premium. So that&#39;s a little bit less than the tech concept of\n          100%. So depends on where you&#39;re pulling people from. If\n          you&#39;re pulling people from Google and Facebook, their expectation\n          is hundred percent, if you&#39;re pulling people from kind of broad,\n          big corporate companies, they may not expect that. And what would they\n          expect? Also around 80%, so a modest out of pocket.\n          <br />\n          <br />\n          There&#39;s definitely some people who are of the mind that you should\n          make people pay a little bit, so they care. What you get for nothing\n          is worth nothing is sort of a phrase that your parents might say -\n          sort of true. And so I can understand trying to get people to pay a\n          little bit, you just might get pushback.\n          <br />\n          <br />I would also pick one plan, or two plans, but no more - giving\n          people lots of more options is worse, overwhelming. It&#39;s just,\n          they&#39;re all kind of the same if you&#39;re in a major metropolitan\n          area, they&#39;re all kind of the same. Pick something that seems\n          reasonable and move on, don&#39;t make it a big thing. There&#39;s\n          always going to be some annoying person in the organization that&#39;s\n          trying to make a thing out of it. Ignore that person, simplify.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          And is there any between all the big plans?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Again, in a major metropolitan area, just make sure that the big\n          hospital systems are included in the plan. So you know, whatever they\n          are, you want to make sure that most of the major hospital systems\n          have that plan. And I think the other thing that I would focus on a\n          little bit is just making sure the administration is easy. That&#39;s\n          the pro of working with one of the software vendors, because remember,\n          part of this is very tied to payroll. So as you add an employee, you\n          add them to payroll, you add them to benefits, if you are taking\n          deductions from them for dependents, that&#39;s done through payroll,\n          if they&#39;re making a contribution to the insurance, because they\n          have a kid or a spouse that&#39;s on the plan, or if they&#39;re\n          paying a portion because you&#39;re not doing 100% coverage,\n          that&#39;s coming through payroll, so they&#39;re very tied in. So my\n          strong advice is to do it through the payroll provider, particularly\n          for a small company, because it&#39;s just not worth the added\n          complexity that you don&#39;t need. Once you have multiple locations\n          and people with all kinds of problems and this and that, plans start\n          to become expensive, and you care about costs. And all these things is\n          if you have a lot of people, that is when you kind of engage a broker\n          or a consultant and probably don&#39;t use the payroll version of\n          this.\n          <br />\n          <br />\n          As you get bigger, you can do what&#39;s called self insured, and\n          basically set up your own risk pool you have. But yes, the way\n          insurance is, it&#39;s just one of those things that you cannot buy\n          direct, like you cannot go to anthem.com and buy it — probably they\n          might refer you to a broker — but you cannot buy directly from them,\n          the way you can buy insurance directly from the government site on a\n          consumer basis. If you&#39;re unemployed or self employed, or you\n          don&#39;t work at a company that offers health insurance — and that\n          was part of the the Affordable Care Act in creating these — I forget\n          what they call them\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: <React.Fragment>Exchanges</React.Fragment>,\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          The exchanges. Yes. Thank you.\n          <br />\n          <br />I think the other topic that comes up in benefits is sort of\n          the, you could call them the additional coverages. So I would say\n          dental and vision are sort of considered standard. So if you don&#39;t\n          offer dental and vision, people will ask questions. Dental, you know,\n          you typically two cleanings a year covered and some procedures are\n          covered. Vision, they&#39;re giving you some coverage for an annual\n          eye exam, plus some credit to glasses or contacts. So those tend to be\n          really cheap. What costs a lot of money is the health plan. Then\n          there&#39;s all these things that are like supplemental or additive\n          things like long term care, disability, accidental disability and\n          dismemberment or something, ADD it&#39;s called. You have those called\n          voluntary benefits. They include life insurance, they include Critical\n          Care Insurance, like if you get cancer. I think those are nice to\n          haves, but I wouldn&#39;t focus on them early, especially if you have\n          a younger employee base. I think that you&#39;re more likely to get\n          like employees engaged by offering something like commuter benefits,\n          which is sort of like pre tax contributions to their transportation,\n          or for offering food in the office or offering even something around a\n          gym membership or student loan assistance, all those things are going\n          to resonate with an a younger employee base more than critical care\n          and sort of these things that tend to factor in older employee base.\n          That&#39;s what I would say if your employee base is older, you know,\n          student loans, maybe less relevant. Gym, maybe less relevant? Well, I\n          mean, not that older people don&#39;t go to the gym, they do, but it\n          just depends on what&#39;s going to be the most added value benefit.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: <React.Fragment>What does the broker actually do?</React.Fragment>,\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So the value of a broker. So just to be clear, you&#39;re always\n          buying from a broker, even if you&#39;re buying like from gusto or\n          rippling. They&#39;re just an online broker, but they&#39;re still the\n          broker. But I think the value of a broker, and I have seen it, is when\n          things are confusing in the healthcare ecosystem, which they are, you\n          sort of have someone to call which does comfort employees. So for me,\n          you know, our CEO one time was in New York had an issue - we have a\n          California insurance plan, there&#39;s some sort of crossover. And it\n          was nice to be able to call someone and say, hey, you know, my CEO is\n          in New York has a problem, what does he do? And I think if you&#39;re\n          using an online software platform there, there&#39;s tends to be less\n          service there versus a broker that you&#39;re calling day to day. The\n          downside of the broker is just, as I mentioned, it&#39;s not as\n          integrated with your payroll. So you&#39;re kind of always updating\n          your broker on who joined recently. Like, oh, you have to tell them,\n          hey, this person joined, add them to benefits. And so it becomes an\n          administrative burden. If you&#39;re adding a lot of people,\n          you&#39;re a busy CFO got a million things to do and HR is kind of\n          your side job. So I think that&#39;s the downside.\n          <br />\n          <br />\n          But with the broker, I guess I didn&#39;t really answer your question\n          with the broker. What the broker is doing is they&#39;re consulting\n          and advising you on what plans to pick - they&#39;re bidding out your\n          company. They&#39;ll ask for an employee census, they&#39;ll say,\n          okay, based on your company&#39;s demographics, this is what your\n          pricing is in what&#39;s called the small group market. So that&#39;s\n          under 50 employees. They are going to help you coordinate between\n          those plans and decide. And then they&#39;re also that consultative\n          service. If anything goes wrong, you can call and ask them questions.\n          So they don&#39;t do that much. They do some work around the renewal\n          and then they&#39;re someone you can call if you have questions.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          All right, Michael, thanks so much for coming on talking benefits.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: <React.Fragment>Thank you.</React.Fragment>,\n    },\n  ],\n};\n","import React from \"react\";\n\nimport Layout from \"components/layout\";\n\nimport TranscriptHero from \"components/podcast/transcriptHero\";\nimport Transcript from \"components/podcast/transcript\";\nimport { episodeSevenTranscript as transcript } from \"components/brexInTheBlack/episodeSevenTranscript\";\n\nconst Episode = ({ location }) => (\n  <Layout\n    location={location}\n    whiteContentBackground\n    title=\"Brex In the Black | Benefits\"\n    description=\"What plan to choose and how to get it\"\n  >\n    <TranscriptHero\n      date={transcript.date}\n      location={transcript.location}\n      personTitle={transcript.personTitle}\n      title={transcript.title}\n    />\n    <Transcript\n      embedLink={transcript.embedLink}\n      title={transcript.title}\n      transcript={transcript.transcript}\n    />\n  </Layout>\n);\n\nexport default Episode;\n","import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { breakPoints } from \"components/Grid.tsx\";\n\nexport const Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  paddingBottom: 165,\n  alignItems: \"center\",\n});\n\nexport const Title = styled(\"h2\")(({ color }) => ({\n  fontSize: 48,\n  lineHeight: \"52px\",\n  color,\n  textAlign: \"center\",\n  margin: \"auto\",\n  fontWeight: 600,\n  paddingBottom: 24,\n\n  [breakPoints.small]: {\n    fontSize: 36,\n  },\n}));\n\nexport const Body = styled(\"div\")(({ color }) => ({\n  fontSize: 16,\n  lineHeight: \"27px\",\n  color,\n  margin: \"auto\",\n  textAlign: \"center\",\n  paddingBottom: 40,\n  maxWidth: 500,\n}));\n\nexport const InputField = styled(\"input\")({\n  width: \"100%\",\n  height: 60,\n  paddingLeft: 20,\n});\n\nexport const Button = styled(\"button\")({\n  flexGrow: 0,\n  backgroundColor: colors.primary,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  fontSize: 12,\n  height: 60,\n  width: 200,\n  color: \"#FFF\",\n  border: \"none\",\n  textTransform: \"uppercase\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n});\n\nexport const Form = styled(\"form\")({\n  display: \"flex\",\n  width: \"100%\",\n  maxWidth: 600,\n});\n","import React from \"react\";\n\nimport { Container, Title, Body, InputField, Button, Form } from \"./elements\";\n\n// To DO (Abiel 2019-02-23): Remove redirection to Google's \"thank you for submitting\"\n\nconst ContactForm = ({\n  title,\n  body,\n  buttonTitle,\n  formUrl,\n  inputName,\n  onDarkBackground,\n}) => {\n  const textColor = onDarkBackground ? \"#FFF\" : \"#000\";\n  return (\n    <Container>\n      {title && <Title color={textColor}>{title}</Title>}\n      <Body color={textColor}>{body}</Body>\n      <Form action={formUrl} target=\"_blank\">\n        <InputField\n          placeholder=\"Email\"\n          type=\"email\"\n          autoComplete=\"off\"\n          name={inputName}\n        />\n        <Button type=\"submit\">{buttonTitle}</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n"],"sourceRoot":""}