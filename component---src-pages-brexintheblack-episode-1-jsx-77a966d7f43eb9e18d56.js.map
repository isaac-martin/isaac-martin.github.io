{"version":3,"sources":["webpack:///./src/components/podcast/transcriptHero/elements.jsx","webpack:///./src/components/podcast/transcriptHero/index.jsx","webpack:///./src/components/podcast/transcript/elements.jsx","webpack:///./src/components/podcast/transcript/index.jsx","webpack:///./src/components/ContactForm/elements.jsx","webpack:///./src/components/ContactForm/index.jsx","webpack:///./src/components/brexInTheBlack/episodeOneTranscript.jsx","webpack:///./src/pages/brexintheblack/episode-1.jsx"],"names":["Container","padding","backgroundColor","colors","white","DateLocation","color","black","textTransform","fontSize","lineHeight","letterSpacing","marginBottom","Primary","primary","Title","fontWeight","TranscriptHero","title","date","location","personTitle","gutterWidth","column","span","spanMedium","paddingTop","display","alignItems","justifyContent","flexDirection","Body","margin","TranscriptText","Speaker","breakPoints","small","TranscriptSection","AudioContainer","width","medium","RowWrapper","Transcript","embedLink","transcript","wrappedSpacing","src","frameBorder","scrolling","map","transcriptSection","i","withTopMargin","key","spanSmall","speaker","text","ContactForm","body","buttonTitle","formUrl","inputName","textAlign","paddingBottom","maxWidth","InputField","Button","flexGrow","height","border","cursor","Form","textColor","onDarkBackground","action","target","placeholder","type","autoComplete","name","episodeOneTranscript","Fragment","Episode","whiteContentBackground","description"],"mappings":"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","file":"component---src-pages-brexintheblack-episode-1-jsx-77a966d7f43eb9e18d56.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { padding } from \"polished\";\n\nexport const Container = styled(\"div\")({\n  ...padding(100, 0, 0, 0),\n  backgroundColor: colors.white,\n});\n\nexport const DateLocation = styled(\"div\")({\n  color: colors.black,\n  textTransform: \"uppercase\",\n  fontSize: 12,\n  lineHeight: 1.4,\n  letterSpacing: 1.05,\n  marginBottom: 30,\n});\n\nexport const Primary = styled(\"span\")({\n  color: colors.primary,\n});\n\nexport const Title = styled(\"h1\")({\n  color: colors.black,\n  fontSize: 32,\n  lineHeight: 1.31,\n  fontWeight: 600,\n  marginBottom: 24,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport { Container, DateLocation, Primary, Title } from \"./elements\";\n\nconst TranscriptHero = ({ title, date, location, personTitle }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={2} spanMedium={0} />\n      <Column span={8} spanMedium={12}>\n        <div>\n          <DateLocation>{`${date} - ${location}`}</DateLocation>\n          <Title>\n            {title}\n            {\": \"}\n            <Primary>{personTitle}</Primary>\n          </Title>\n        </div>\n      </Column>\n      <Column span={2} spanMedium={0} />\n    </Row>\n  </Container>\n);\n\nexport default TranscriptHero;\n","import styled from \"@emotion/styled\";\nimport { margin } from \"polished\";\n\nimport { breakPoints } from \"components/Grid.tsx\";\n\nimport colors from \"styles/colors\";\n\nexport const Container = styled(\"section\")({\n  paddingTop: 70,\n  color: colors.black,\n  display: \"flex\",\n  alignItems: \"stretch\",\n  justifyContent: \"flexStart\",\n  flexDirection: \"column\",\n});\n\nexport const Body = styled(\"div\")({\n  ...margin(40, 0, 120, 0),\n});\n\nexport const TranscriptText = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"column nowrap\",\n  fontSize: 16,\n  lineHeight: 1.7,\n});\n\nexport const Speaker = styled(\"div\")({\n  fontWeight: 600,\n  fontSize: 16,\n  lineHeight: 1.61,\n  [breakPoints.small]: {\n    marginBottom: -60,\n  },\n});\n\nexport const TranscriptSection = styled(\"div\")({\n  display: \"flex\",\n  flexFlow: \"row nowrap\",\n});\n\nexport const AudioContainer = styled(\"iframe\")({\n  width: \"50%\",\n  margin: \"0 auto\",\n  display: \"block\",\n  marginBottom: 48,\n\n  [breakPoints.medium]: {\n    width: \"70%\",\n  },\n  [breakPoints.small]: {\n    width: \"90%\",\n  },\n});\n\nexport const RowWrapper = styled(\"div\")({\n  paddingTop: 80,\n});\n","import React from \"react\";\n\nimport { Row, Column } from \"components/Grid.tsx\";\n\nimport ContactForm from \"components/ContactForm\";\nimport {\n  Container,\n  AudioContainer,\n  Body,\n  TranscriptText,\n  Speaker,\n  TranscriptSection,\n  RowWrapper,\n} from \"./elements\";\n\n// To DO (Mikalai 2019-09-04): If such constants will be grown will need to move them to one file\n\nconst contactFormUrl =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSdsHxkHI16joNQZ3nUkIBKDdyE2hK57HA4OYJOiIOl27etKWA/formResponse\";\n\nconst Transcript = ({ title, embedLink, transcript }) => (\n  <Container>\n    <Row gutterWidth={26} column={30}>\n      <Column span={12} wrappedSpacing={0}>\n        <AudioContainer\n          src={embedLink}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          title={title}\n        />\n      </Column>\n    </Row>\n    <Body>\n      {transcript.map((transcriptSection, i) => (\n        <Row gutterWidth={26} column={30} withTopMargin key={`transcript-${i}`}>\n          <Column span={2} spanMedium={0} />\n          <Column span={2} spanMedium={2} spanSmall={12}>\n            <Speaker>\n              {transcriptSection.speaker}\n              {\":\"}\n            </Speaker>\n          </Column>\n          <Column span={6} spanMedium={10} spanSmall={12}>\n            <TranscriptSection>\n              <TranscriptText>{transcriptSection.text}</TranscriptText>\n            </TranscriptSection>\n          </Column>\n          <Column span={2} spanMedium={0} />\n        </Row>\n      ))}\n      <RowWrapper>\n        <Row padding={30} gutterWidth={26}>\n          <Column span={1} />\n          <Column span={10}>\n            <ContactForm\n              title={null}\n              body=\"Get notified about future episodes of Brex in the Black\"\n              buttonTitle=\"submit\"\n              formUrl={contactFormUrl}\n              inputName=\"entry.182032046\"\n            />\n          </Column>\n          <Column span={1} />\n        </Row>\n      </RowWrapper>\n    </Body>\n  </Container>\n);\n\nexport default Transcript;\n","import styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport { breakPoints } from \"components/Grid.tsx\";\n\nexport const Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  paddingBottom: 165,\n  alignItems: \"center\",\n});\n\nexport const Title = styled(\"h2\")(({ color }) => ({\n  fontSize: 48,\n  lineHeight: \"52px\",\n  color,\n  textAlign: \"center\",\n  margin: \"auto\",\n  fontWeight: 600,\n  paddingBottom: 24,\n\n  [breakPoints.small]: {\n    fontSize: 36,\n  },\n}));\n\nexport const Body = styled(\"div\")(({ color }) => ({\n  fontSize: 16,\n  lineHeight: \"27px\",\n  color,\n  margin: \"auto\",\n  textAlign: \"center\",\n  paddingBottom: 40,\n  maxWidth: 500,\n}));\n\nexport const InputField = styled(\"input\")({\n  width: \"100%\",\n  height: 60,\n  paddingLeft: 20,\n});\n\nexport const Button = styled(\"button\")({\n  flexGrow: 0,\n  backgroundColor: colors.primary,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  fontSize: 12,\n  height: 60,\n  width: 200,\n  color: \"#FFF\",\n  border: \"none\",\n  textTransform: \"uppercase\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n});\n\nexport const Form = styled(\"form\")({\n  display: \"flex\",\n  width: \"100%\",\n  maxWidth: 600,\n});\n","import React from \"react\";\n\nimport { Container, Title, Body, InputField, Button, Form } from \"./elements\";\n\n// To DO (Abiel 2019-02-23): Remove redirection to Google's \"thank you for submitting\"\n\nconst ContactForm = ({\n  title,\n  body,\n  buttonTitle,\n  formUrl,\n  inputName,\n  onDarkBackground,\n}) => {\n  const textColor = onDarkBackground ? \"#FFF\" : \"#000\";\n  return (\n    <Container>\n      {title && <Title color={textColor}>{title}</Title>}\n      <Body color={textColor}>{body}</Body>\n      <Form action={formUrl} target=\"_blank\">\n        <InputField\n          placeholder=\"Email\"\n          type=\"email\"\n          autoComplete=\"off\"\n          name={inputName}\n        />\n        <Button type=\"submit\">{buttonTitle}</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\n\nexport const episodeOneTranscript = {\n  embedLink:\n    \"https://anchor.fm/christopher-read/embed/episodes/Fundraising-e43qev/a-aharcu\",\n  date: \"Apr 2 2019\",\n  location: \"San Francisco, CA\",\n  title: \"Fundraising\",\n  personTitle: \"Michael Tannenbaum\",\n  transcript: [\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          Welcome to brex in the black, where we discuss finance for operators.\n          We have our CFO here today to talk about fundraising — when, how to\n          approach, and what to prepare. Hi, Michael. So when should you start\n          thinking about fundraising?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So there&#39;s no universal rule. But I&#39;ll try to provide one. I\n          think that when you&#39;re, I think for early stage companies, which\n          is kind of what I know best. When you have visibility into needing\n          money within the next six months, I think whenever you&#39;re\n          operating a business, it&#39;s pretty hard, unless you&#39;re in a\n          really mature company to have visibility beyond six months. So when\n          you feel like in six months, you&#39;re going to need money. And when\n          I say need money, let&#39;s say you won&#39;t be able to meet two\n          payrolls. That&#39;s probably what I&#39;d say, okay, six months from\n          now, I won&#39;t be able to meet two two payrolls. I won&#39;t have a\n          cushion for two payrolls, I start to think about fundraising now.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          And is that how most people think about fundraising?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Probably not. I think that&#39;s kind of a CFO, cash burn oriented\n          approach. I think, a lot of times in an earlier stage company, there\n          maybe isn&#39;t a finance person or the finance person is not\n          necessarily a thought partner, to the CEO, or the person making the\n          decision. But they should be. And I think that typically, it&#39;s\n          going to be on the owner of the business or founder initially to\n          manage fundraising. But the CFO when asked, when someone&#39;s\n          providing guidance as a finance person, whether your CFO or not,\n          that&#39;s roughly the framework I would look at.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          So as CFO is providing the guidance, how do you approach the\n          fundraising process generally.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So it will also be stage dependent, I mean, more mature companies will\n          need more. But I think coming in every company should have a good\n          sense of, I would say, a couple different assets.\n          <br />\n          <br />\n          One is sort of the story or pitch deck. And that will evolve to be\n          from kind of very focused on the future opportunity, market size, kind\n          of big, broad sweeps to being very granular. This is how we&#39;re\n          actually going to get here, here&#39;s our margins, etc, as you become\n          more mature, but that&#39;s sort of one thing you need.\n          <br />\n          <br />\n          Another thing you need is some financial overview of your current\n          business, or at least what your business is going to be. So some sense\n          of revenue costs, profitability of your business, either as a whole or\n          at least on a unit basis, meaning per customer, what is the money that\n          you take in? How much does it cost a service and acquire them? And\n          what&#39;s your customer unit level profitability? Some people call\n          that unit economics, so you definitely need those two.\n          <br />\n          <br />\n          And then lastly, you usually need or you should have a sense of the\n          use of proceeds, what are you doing with the money, right, so\n          that&#39;s going to be someone, someone&#39;s going to want to know\n          that, I&#39;d say those three things.\n          <br />\n          <br />\n          So overview, some form of financials, and then some sense of the use\n          of money.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          So this largely applies to startups that have already gotten product\n          market fit, because before then you don&#39;t know exactly what\n          you&#39;re going to spend the money on, or what your cash burn is\n          going to be, you don&#39;t but you should still\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Like you should not be entering a business with no sense of how it\n          could be monetized. So even if you haven&#39;t, even if it&#39;s just\n          your first early stage, pitch, and you&#39;re just a person in a\n          garage with another person, you should still you have to be broad, we\n          were at a house that was actually my garage\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: <React.Fragment>It was much nicer than the garage</React.Fragment>,\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Because we were doing a second time founder, so they had money. But\n          whether your founder has money or not, if you&#39;re working with him\n          or her, you want to think about you still have a sense for, okay, if\n          we attain product market fit, which just means if this business works,\n          what are the economics going to be — because if at scale, you&#39;re\n          still losing money per customer, that&#39;s not typically good. See,\n          Uber and Lyft. But obviously, I&#39;m not gonna get into that. But\n          they&#39;re very successful in some ways. But you know, at scale, you\n          want to have profitability per customer that you see a business path\n          that makes sense.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          What about the Google case where they didn&#39;t know what their\n          business was going to be and they just kind of stumbled on ad\n          networks?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          Yes, I think that there&#39;s a few businesses. I don&#39;t know\n          enough about the history of Google to know that they never thought\n          about advertising as monetization.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          So in the fundraising process, after you&#39;ve had product market\n          fit, and you&#39;ve done all the things you just mentioned, how do you\n          prepare for the actual fundraising?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So I think you get these materials ready. So you always want to enter,\n          it&#39;s not always possible, because sometimes, you know, super hot\n          companies, oftentimes the fundraising comes inbound. And that&#39;s at\n          least the market we&#39;re in today, that could change. But if\n          it&#39;s not inbound, and you&#39;re sort of declaring that you will\n          do a fundraise, if you even have a sense, based on that six month rule\n          we talked about earlier, or you&#39;ve heard people talk about, we\n          might need to do a fundraising, it&#39;s best to prepare these assets\n          in advance, get buy in from, in super small company, everyone in the\n          company, if you&#39;re talking about a bigger company, at least the\n          executive team, make sure everybody&#39;s aligned on the pitch, the\n          economics, the financial overview, and what we&#39;re going to\n          actually use the money for. And I think getting that alignment and\n          having this set of assets ready to go, then you&#39;re ready to enter\n          the fundraising process.. Did you want me to talk more about that?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          Yeah, more about the fundraising process.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So usually, what will happen is, there&#39;s a series, there&#39;s\n          sort of some initial meetings that you will do, where these materials\n          that I mentioned earlier, either will or will not be shown depending\n          on the style of the CEO, and you are going into those meetings with\n          the explicit fundraise. So in a good case, in the best scenario,\n          you&#39;re doing a business, you&#39;re meeting with an investor to\n          get their perspective, to talk about an issue, to kind of introduce\n          your story, and you&#39;re not specifically fundraising and in the\n          best scenario, that investor would then become interested in come back\n          to you. And it would sort of be a process, that doesn&#39;t always\n          happen. And sometimes you need the money faster. Ideally, you&#39;ve\n          met this person before, though. So you&#39;re kind of emailing them or\n          calling them and saying: hey, we&#39;re kicking off a process would\n          love to tell you the story. And then you&#39;re doing that. So\n          that&#39;s not terrible. It&#39;s not as good as someone coming to\n          you. Right? Right. But it&#39;s okay. And so when you do that initial\n          meeting, then from there, sometimes the materials are covered,\n          sometimes they&#39;re not. Then typically, there&#39;s follow up,\n          diligence, you&#39;re working to sign some form of a term sheet. And\n          then that term sheet has outlines on the deal, price, governance —\n          meaning, are people joining the board, etc. — and timing and structure\n          — meaning, what is the actual security that someone&#39;s bought? Is\n          it a preferred share? And if so, what rights does it have, and then\n          from there, you are negotiating that term sheet, signing it, and then\n          typically closing within 30 days.\n          <br />\n          <br />\n          Then the CFO has, or the finance department has a particular important\n          goal. In closing, one thing that often gets overlooked, which is\n          making sure the money actually comes. So remember that when you have\n          this closing date, money doesn&#39;t just magically show up in your\n          account, someone actually has to wire it. And if you leave it up to\n          the lawyers to make sure that the wires come, you&#39;ll typically\n          find that to be problematic, because they don&#39;t want the money as\n          much as you do. So there&#39;s a big job in the finance role is to\n          make sure that all the investors at the closing date when the\n          documents are being signed, that they actually go and wire the money\n          to you. So you need to send out your wire instructions, give them this\n          information and say like confirming tomorrow we are signing, you are\n          actually wiring because they have to engage those processes. And as\n          you know, nobody really wants to wire. They don&#39;t want to actually\n          give up the money. So you have to compel them to do this.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          in terms of dealing with investors board, generally, how many\n          investors do you talk to? How broad do you make the search?\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: (\n        <React.Fragment>\n          So I think that&#39;s not always a finance decision. And I know that\n          we&#39;re we&#39;ve talked on a different podcast about how to be a\n          partner to the CEO. But I&#39;d say that, in general, you probably\n          want to be talking to somewhere between three and no more than 10,\n          I&#39;d say three and six is ideal. Some people like to do big, broad\n          rounds, but you know, it&#39;s all burden. It&#39;s an operational\n          burden to handle any more than that. And also you increase the chance\n          of it leaking. You know, if you want to control the messaging to the\n          press or to customers, you may not really want to a bunch of people\n          learning all this information about your company. So you want to tell\n          you tend to keep it to a small number of people.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Chris R\",\n      text: (\n        <React.Fragment>\n          All right. Thank you Michael for talking about fundraising.\n        </React.Fragment>\n      ),\n    },\n    {\n      speaker: \"Michael T\",\n      text: <React.Fragment>Thank you, Chris.</React.Fragment>,\n    },\n  ],\n};\n","import React from \"react\";\n\nimport Layout from \"components/layout\";\n\nimport TranscriptHero from \"components/podcast/transcriptHero\";\nimport Transcript from \"components/podcast/transcript\";\nimport { episodeOneTranscript as transcript } from \"components/brexInTheBlack/episodeOneTranscript\";\n\nconst Episode = ({ location }) => (\n  <Layout\n    location={location}\n    whiteContentBackground\n    title=\"Brex In the Black | Fundraising\"\n    description=\"Fundraising — when to start, how to approach, and what to prepare\"\n  >\n    <TranscriptHero\n      date={transcript.date}\n      location={transcript.location}\n      personTitle={transcript.personTitle}\n      title={transcript.title}\n    />\n    <Transcript\n      embedLink={transcript.embedLink}\n      title={transcript.title}\n      transcript={transcript.transcript}\n    />\n  </Layout>\n);\n\nexport default Episode;\n"],"sourceRoot":""}